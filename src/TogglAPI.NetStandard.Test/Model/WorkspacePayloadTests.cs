/* 
 * Toggl API
 *
 * Public Toggl API. Note: We use BasicAuth in a specific way. By the standard you provide `Authentication` header with `base64(user_name:password)` as a `credential`. In our case it will be `base64(user_name:api_token)`.
 *
 * OpenAPI spec version: 9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TogglAPI.NetStandard.Api;
using TogglAPI.NetStandard.Model;
using TogglAPI.NetStandard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TogglAPI.NetStandard.Test
{
    /// <summary>
    ///  Class for testing WorkspacePayload
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class WorkspacePayloadTests
    {
        // TODO uncomment below to declare an instance variable for WorkspacePayload
        //private WorkspacePayload instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of WorkspacePayload
            //instance = new WorkspacePayload();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WorkspacePayload
        /// </summary>
        [Test]
        public void WorkspacePayloadInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" WorkspacePayload
            //Assert.IsInstanceOfType<WorkspacePayload> (instance, "variable 'instance' is a WorkspacePayload");
        }


        /// <summary>
        /// Test the property 'Admins'
        /// </summary>
        [Test]
        public void AdminsTest()
        {
            // TODO unit test for the property 'Admins'
        }
        /// <summary>
        /// Test the property 'DefaultCurrency'
        /// </summary>
        [Test]
        public void DefaultCurrencyTest()
        {
            // TODO unit test for the property 'DefaultCurrency'
        }
        /// <summary>
        /// Test the property 'DefaultHourlyRate'
        /// </summary>
        [Test]
        public void DefaultHourlyRateTest()
        {
            // TODO unit test for the property 'DefaultHourlyRate'
        }
        /// <summary>
        /// Test the property 'InitialPricingPlan'
        /// </summary>
        [Test]
        public void InitialPricingPlanTest()
        {
            // TODO unit test for the property 'InitialPricingPlan'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'OnlyAdminsMayCreateProjects'
        /// </summary>
        [Test]
        public void OnlyAdminsMayCreateProjectsTest()
        {
            // TODO unit test for the property 'OnlyAdminsMayCreateProjects'
        }
        /// <summary>
        /// Test the property 'OnlyAdminsMayCreateTags'
        /// </summary>
        [Test]
        public void OnlyAdminsMayCreateTagsTest()
        {
            // TODO unit test for the property 'OnlyAdminsMayCreateTags'
        }
        /// <summary>
        /// Test the property 'OnlyAdminsSeeBillableRates'
        /// </summary>
        [Test]
        public void OnlyAdminsSeeBillableRatesTest()
        {
            // TODO unit test for the property 'OnlyAdminsSeeBillableRates'
        }
        /// <summary>
        /// Test the property 'OnlyAdminsSeeTeamDashboard'
        /// </summary>
        [Test]
        public void OnlyAdminsSeeTeamDashboardTest()
        {
            // TODO unit test for the property 'OnlyAdminsSeeTeamDashboard'
        }
        /// <summary>
        /// Test the property 'ProjectsBillableByDefault'
        /// </summary>
        [Test]
        public void ProjectsBillableByDefaultTest()
        {
            // TODO unit test for the property 'ProjectsBillableByDefault'
        }
        /// <summary>
        /// Test the property 'ProjectsPrivateByDefault'
        /// </summary>
        [Test]
        public void ProjectsPrivateByDefaultTest()
        {
            // TODO unit test for the property 'ProjectsPrivateByDefault'
        }
        /// <summary>
        /// Test the property 'RateChangeMode'
        /// </summary>
        [Test]
        public void RateChangeModeTest()
        {
            // TODO unit test for the property 'RateChangeMode'
        }
        /// <summary>
        /// Test the property 'ReportsCollapse'
        /// </summary>
        [Test]
        public void ReportsCollapseTest()
        {
            // TODO unit test for the property 'ReportsCollapse'
        }
        /// <summary>
        /// Test the property 'Rounding'
        /// </summary>
        [Test]
        public void RoundingTest()
        {
            // TODO unit test for the property 'Rounding'
        }
        /// <summary>
        /// Test the property 'RoundingMinutes'
        /// </summary>
        [Test]
        public void RoundingMinutesTest()
        {
            // TODO unit test for the property 'RoundingMinutes'
        }

    }

}
