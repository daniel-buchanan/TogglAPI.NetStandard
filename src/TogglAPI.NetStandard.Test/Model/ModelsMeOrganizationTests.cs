/* 
 * Toggl API
 *
 * Public Toggl API. Note: We use BasicAuth in a specific way. By the standard you provide `Authentication` header with `base64(user_name:password)` as a `credential`. In our case it will be `base64(user_name:api_token)`.
 *
 * OpenAPI spec version: 9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TogglAPI.NetStandard.Api;
using TogglAPI.NetStandard.Model;
using TogglAPI.NetStandard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TogglAPI.NetStandard.Test
{
    /// <summary>
    ///  Class for testing ModelsMeOrganization
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ModelsMeOrganizationTests
    {
        // TODO uncomment below to declare an instance variable for ModelsMeOrganization
        //private ModelsMeOrganization instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ModelsMeOrganization
            //instance = new ModelsMeOrganization();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ModelsMeOrganization
        /// </summary>
        [Test]
        public void ModelsMeOrganizationInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ModelsMeOrganization
            //Assert.IsInstanceOfType<ModelsMeOrganization> (instance, "variable 'instance' is a ModelsMeOrganization");
        }


        /// <summary>
        /// Test the property 'Admin'
        /// </summary>
        [Test]
        public void AdminTest()
        {
            // TODO unit test for the property 'Admin'
        }
        /// <summary>
        /// Test the property 'At'
        /// </summary>
        [Test]
        public void AtTest()
        {
            // TODO unit test for the property 'At'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Test]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'IsMultiWorkspaceEnabled'
        /// </summary>
        [Test]
        public void IsMultiWorkspaceEnabledTest()
        {
            // TODO unit test for the property 'IsMultiWorkspaceEnabled'
        }
        /// <summary>
        /// Test the property 'IsUnified'
        /// </summary>
        [Test]
        public void IsUnifiedTest()
        {
            // TODO unit test for the property 'IsUnified'
        }
        /// <summary>
        /// Test the property 'MaxDataRetentionDays'
        /// </summary>
        [Test]
        public void MaxDataRetentionDaysTest()
        {
            // TODO unit test for the property 'MaxDataRetentionDays'
        }
        /// <summary>
        /// Test the property 'MaxWorkspaces'
        /// </summary>
        [Test]
        public void MaxWorkspacesTest()
        {
            // TODO unit test for the property 'MaxWorkspaces'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Owner'
        /// </summary>
        [Test]
        public void OwnerTest()
        {
            // TODO unit test for the property 'Owner'
        }
        /// <summary>
        /// Test the property 'PaymentMethods'
        /// </summary>
        [Test]
        public void PaymentMethodsTest()
        {
            // TODO unit test for the property 'PaymentMethods'
        }
        /// <summary>
        /// Test the property 'Permissions'
        /// </summary>
        [Test]
        public void PermissionsTest()
        {
            // TODO unit test for the property 'Permissions'
        }
        /// <summary>
        /// Test the property 'PricingPlanEnterprise'
        /// </summary>
        [Test]
        public void PricingPlanEnterpriseTest()
        {
            // TODO unit test for the property 'PricingPlanEnterprise'
        }
        /// <summary>
        /// Test the property 'PricingPlanId'
        /// </summary>
        [Test]
        public void PricingPlanIdTest()
        {
            // TODO unit test for the property 'PricingPlanId'
        }
        /// <summary>
        /// Test the property 'PricingPlanName'
        /// </summary>
        [Test]
        public void PricingPlanNameTest()
        {
            // TODO unit test for the property 'PricingPlanName'
        }
        /// <summary>
        /// Test the property 'ServerDeletedAt'
        /// </summary>
        [Test]
        public void ServerDeletedAtTest()
        {
            // TODO unit test for the property 'ServerDeletedAt'
        }
        /// <summary>
        /// Test the property 'SuspendedAt'
        /// </summary>
        [Test]
        public void SuspendedAtTest()
        {
            // TODO unit test for the property 'SuspendedAt'
        }
        /// <summary>
        /// Test the property 'TrialInfo'
        /// </summary>
        [Test]
        public void TrialInfoTest()
        {
            // TODO unit test for the property 'TrialInfo'
        }
        /// <summary>
        /// Test the property 'UserCount'
        /// </summary>
        [Test]
        public void UserCountTest()
        {
            // TODO unit test for the property 'UserCount'
        }

    }

}
