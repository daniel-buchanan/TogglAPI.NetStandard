/* 
 * Toggl API
 *
 * Public Toggl API. Note: We use BasicAuth in a specific way. By the standard you provide `Authentication` header with `base64(user_name:password)` as a `credential`. In our case it will be `base64(user_name:api_token)`.
 *
 * OpenAPI spec version: 9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TogglAPI.NetStandard.Api;
using TogglAPI.NetStandard.Model;
using TogglAPI.NetStandard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TogglAPI.NetStandard.Test
{
    /// <summary>
    ///  Class for testing ModelsAllPreferences
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ModelsAllPreferencesTests
    {
        // TODO uncomment below to declare an instance variable for ModelsAllPreferences
        //private ModelsAllPreferences instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ModelsAllPreferences
            //instance = new ModelsAllPreferences();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ModelsAllPreferences
        /// </summary>
        [Test]
        public void ModelsAllPreferencesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ModelsAllPreferences
            //Assert.IsInstanceOfType<ModelsAllPreferences> (instance, "variable 'instance' is a ModelsAllPreferences");
        }


        /// <summary>
        /// Test the property 'ActivityTimelineDisplayActivity'
        /// </summary>
        [Test]
        public void ActivityTimelineDisplayActivityTest()
        {
            // TODO unit test for the property 'ActivityTimelineDisplayActivity'
        }
        /// <summary>
        /// Test the property 'ActivityTimelineGroupingInterval'
        /// </summary>
        [Test]
        public void ActivityTimelineGroupingIntervalTest()
        {
            // TODO unit test for the property 'ActivityTimelineGroupingInterval'
        }
        /// <summary>
        /// Test the property 'ActivityTimelineGroupingMethod'
        /// </summary>
        [Test]
        public void ActivityTimelineGroupingMethodTest()
        {
            // TODO unit test for the property 'ActivityTimelineGroupingMethod'
        }
        /// <summary>
        /// Test the property 'ActivityTimelineRecordingLevel'
        /// </summary>
        [Test]
        public void ActivityTimelineRecordingLevelTest()
        {
            // TODO unit test for the property 'ActivityTimelineRecordingLevel'
        }
        /// <summary>
        /// Test the property 'ActivityTimelineSyncEvents'
        /// </summary>
        [Test]
        public void ActivityTimelineSyncEventsTest()
        {
            // TODO unit test for the property 'ActivityTimelineSyncEvents'
        }
        /// <summary>
        /// Test the property 'AlphaFeatures'
        /// </summary>
        [Test]
        public void AlphaFeaturesTest()
        {
            // TODO unit test for the property 'AlphaFeatures'
        }
        /// <summary>
        /// Test the property 'AutomaticTagging'
        /// </summary>
        [Test]
        public void AutomaticTaggingTest()
        {
            // TODO unit test for the property 'AutomaticTagging'
        }
        /// <summary>
        /// Test the property 'AutotrackingEnabled'
        /// </summary>
        [Test]
        public void AutotrackingEnabledTest()
        {
            // TODO unit test for the property 'AutotrackingEnabled'
        }
        /// <summary>
        /// Test the property 'BeginningOfWeek'
        /// </summary>
        [Test]
        public void BeginningOfWeekTest()
        {
            // TODO unit test for the property 'BeginningOfWeek'
        }
        /// <summary>
        /// Test the property 'CalendarSnapDuration'
        /// </summary>
        [Test]
        public void CalendarSnapDurationTest()
        {
            // TODO unit test for the property 'CalendarSnapDuration'
        }
        /// <summary>
        /// Test the property 'CalendarSnapInitialLocation'
        /// </summary>
        [Test]
        public void CalendarSnapInitialLocationTest()
        {
            // TODO unit test for the property 'CalendarSnapInitialLocation'
        }
        /// <summary>
        /// Test the property 'CalendarVisibleHoursEnd'
        /// </summary>
        [Test]
        public void CalendarVisibleHoursEndTest()
        {
            // TODO unit test for the property 'CalendarVisibleHoursEnd'
        }
        /// <summary>
        /// Test the property 'CalendarVisibleHoursStart'
        /// </summary>
        [Test]
        public void CalendarVisibleHoursStartTest()
        {
            // TODO unit test for the property 'CalendarVisibleHoursStart'
        }
        /// <summary>
        /// Test the property 'CalendarZoomLevel'
        /// </summary>
        [Test]
        public void CalendarZoomLevelTest()
        {
            // TODO unit test for the property 'CalendarZoomLevel'
        }
        /// <summary>
        /// Test the property 'CellSwipeActionsEnabled'
        /// </summary>
        [Test]
        public void CellSwipeActionsEnabledTest()
        {
            // TODO unit test for the property 'CellSwipeActionsEnabled'
        }
        /// <summary>
        /// Test the property 'ChartsViewType'
        /// </summary>
        [Test]
        public void ChartsViewTypeTest()
        {
            // TODO unit test for the property 'ChartsViewType'
        }
        /// <summary>
        /// Test the property 'CollapseDetailedReportEntries'
        /// </summary>
        [Test]
        public void CollapseDetailedReportEntriesTest()
        {
            // TODO unit test for the property 'CollapseDetailedReportEntries'
        }
        /// <summary>
        /// Test the property 'CollapseTimeEntries'
        /// </summary>
        [Test]
        public void CollapseTimeEntriesTest()
        {
            // TODO unit test for the property 'CollapseTimeEntries'
        }
        /// <summary>
        /// Test the property 'DashboardsViewType'
        /// </summary>
        [Test]
        public void DashboardsViewTypeTest()
        {
            // TODO unit test for the property 'DashboardsViewType'
        }
        /// <summary>
        /// Test the property 'DateFormat'
        /// </summary>
        [Test]
        public void DateFormatTest()
        {
            // TODO unit test for the property 'DateFormat'
        }
        /// <summary>
        /// Test the property 'DecimalSeparator'
        /// </summary>
        [Test]
        public void DecimalSeparatorTest()
        {
            // TODO unit test for the property 'DecimalSeparator'
        }
        /// <summary>
        /// Test the property 'DefaultProjectId'
        /// </summary>
        [Test]
        public void DefaultProjectIdTest()
        {
            // TODO unit test for the property 'DefaultProjectId'
        }
        /// <summary>
        /// Test the property 'DefaultTaskId'
        /// </summary>
        [Test]
        public void DefaultTaskIdTest()
        {
            // TODO unit test for the property 'DefaultTaskId'
        }
        /// <summary>
        /// Test the property 'DisplayDensity'
        /// </summary>
        [Test]
        public void DisplayDensityTest()
        {
            // TODO unit test for the property 'DisplayDensity'
        }
        /// <summary>
        /// Test the property 'DistinctRates'
        /// </summary>
        [Test]
        public void DistinctRatesTest()
        {
            // TODO unit test for the property 'DistinctRates'
        }
        /// <summary>
        /// Test the property 'DurationFormat'
        /// </summary>
        [Test]
        public void DurationFormatTest()
        {
            // TODO unit test for the property 'DurationFormat'
        }
        /// <summary>
        /// Test the property 'DurationFormatOnTimerDurationField'
        /// </summary>
        [Test]
        public void DurationFormatOnTimerDurationFieldTest()
        {
            // TODO unit test for the property 'DurationFormatOnTimerDurationField'
        }
        /// <summary>
        /// Test the property 'EditPopupIntegrationTimer'
        /// </summary>
        [Test]
        public void EditPopupIntegrationTimerTest()
        {
            // TODO unit test for the property 'EditPopupIntegrationTimer'
        }
        /// <summary>
        /// Test the property 'ExtensionSendErrorReports'
        /// </summary>
        [Test]
        public void ExtensionSendErrorReportsTest()
        {
            // TODO unit test for the property 'ExtensionSendErrorReports'
        }
        /// <summary>
        /// Test the property 'ExtensionSendUsageStatistics'
        /// </summary>
        [Test]
        public void ExtensionSendUsageStatisticsTest()
        {
            // TODO unit test for the property 'ExtensionSendUsageStatistics'
        }
        /// <summary>
        /// Test the property 'FirstSeenBusinessPromo'
        /// </summary>
        [Test]
        public void FirstSeenBusinessPromoTest()
        {
            // TODO unit test for the property 'FirstSeenBusinessPromo'
        }
        /// <summary>
        /// Test the property 'FocusAppOnTimeEntryStarted'
        /// </summary>
        [Test]
        public void FocusAppOnTimeEntryStartedTest()
        {
            // TODO unit test for the property 'FocusAppOnTimeEntryStarted'
        }
        /// <summary>
        /// Test the property 'FocusAppOnTimeEntryStopped'
        /// </summary>
        [Test]
        public void FocusAppOnTimeEntryStoppedTest()
        {
            // TODO unit test for the property 'FocusAppOnTimeEntryStopped'
        }
        /// <summary>
        /// Test the property 'HapticFeedbackEnabled'
        /// </summary>
        [Test]
        public void HapticFeedbackEnabledTest()
        {
            // TODO unit test for the property 'HapticFeedbackEnabled'
        }
        /// <summary>
        /// Test the property 'HideKeyboardShortcut'
        /// </summary>
        [Test]
        public void HideKeyboardShortcutTest()
        {
            // TODO unit test for the property 'HideKeyboardShortcut'
        }
        /// <summary>
        /// Test the property 'IdleDetectionEnabled'
        /// </summary>
        [Test]
        public void IdleDetectionEnabledTest()
        {
            // TODO unit test for the property 'IdleDetectionEnabled'
        }
        /// <summary>
        /// Test the property 'IdleDetectionIntervalInMinutes'
        /// </summary>
        [Test]
        public void IdleDetectionIntervalInMinutesTest()
        {
            // TODO unit test for the property 'IdleDetectionIntervalInMinutes'
        }
        /// <summary>
        /// Test the property 'InactivityBehavior'
        /// </summary>
        [Test]
        public void InactivityBehaviorTest()
        {
            // TODO unit test for the property 'InactivityBehavior'
        }
        /// <summary>
        /// Test the property 'IsSummaryTotalViewVisible'
        /// </summary>
        [Test]
        public void IsSummaryTotalViewVisibleTest()
        {
            // TODO unit test for the property 'IsSummaryTotalViewVisible'
        }
        /// <summary>
        /// Test the property 'KeepMiniTimerOnTop'
        /// </summary>
        [Test]
        public void KeepMiniTimerOnTopTest()
        {
            // TODO unit test for the property 'KeepMiniTimerOnTop'
        }
        /// <summary>
        /// Test the property 'KeepWindowOnTop'
        /// </summary>
        [Test]
        public void KeepWindowOnTopTest()
        {
            // TODO unit test for the property 'KeepWindowOnTop'
        }
        /// <summary>
        /// Test the property 'KeyboardIncrementTimerPage'
        /// </summary>
        [Test]
        public void KeyboardIncrementTimerPageTest()
        {
            // TODO unit test for the property 'KeyboardIncrementTimerPage'
        }
        /// <summary>
        /// Test the property 'KeyboardShortcutsEnabled'
        /// </summary>
        [Test]
        public void KeyboardShortcutsEnabledTest()
        {
            // TODO unit test for the property 'KeyboardShortcutsEnabled'
        }
        /// <summary>
        /// Test the property 'MacosAutoTrackingRules'
        /// </summary>
        [Test]
        public void MacosAutoTrackingRulesTest()
        {
            // TODO unit test for the property 'MacosAutoTrackingRules'
        }
        /// <summary>
        /// Test the property 'MacosShowHideTogglKeyboardShortcut'
        /// </summary>
        [Test]
        public void MacosShowHideTogglKeyboardShortcutTest()
        {
            // TODO unit test for the property 'MacosShowHideTogglKeyboardShortcut'
        }
        /// <summary>
        /// Test the property 'MacosStopContinueKeyboardShortcut'
        /// </summary>
        [Test]
        public void MacosStopContinueKeyboardShortcutTest()
        {
            // TODO unit test for the property 'MacosStopContinueKeyboardShortcut'
        }
        /// <summary>
        /// Test the property 'ManualEntryMode'
        /// </summary>
        [Test]
        public void ManualEntryModeTest()
        {
            // TODO unit test for the property 'ManualEntryMode'
        }
        /// <summary>
        /// Test the property 'ManualMode'
        /// </summary>
        [Test]
        public void ManualModeTest()
        {
            // TODO unit test for the property 'ManualMode'
        }
        /// <summary>
        /// Test the property 'ManualModeOverlaySeen'
        /// </summary>
        [Test]
        public void ManualModeOverlaySeenTest()
        {
            // TODO unit test for the property 'ManualModeOverlaySeen'
        }
        /// <summary>
        /// Test the property 'ModifyOnStartTimeChange'
        /// </summary>
        [Test]
        public void ModifyOnStartTimeChangeTest()
        {
            // TODO unit test for the property 'ModifyOnStartTimeChange'
        }
        /// <summary>
        /// Test the property 'OfflineMode'
        /// </summary>
        [Test]
        public void OfflineModeTest()
        {
            // TODO unit test for the property 'OfflineMode'
        }
        /// <summary>
        /// Test the property 'PgTimeZoneName'
        /// </summary>
        [Test]
        public void PgTimeZoneNameTest()
        {
            // TODO unit test for the property 'PgTimeZoneName'
        }
        /// <summary>
        /// Test the property 'PomodoroAutoStartBreak'
        /// </summary>
        [Test]
        public void PomodoroAutoStartBreakTest()
        {
            // TODO unit test for the property 'PomodoroAutoStartBreak'
        }
        /// <summary>
        /// Test the property 'PomodoroAutoStartFocus'
        /// </summary>
        [Test]
        public void PomodoroAutoStartFocusTest()
        {
            // TODO unit test for the property 'PomodoroAutoStartFocus'
        }
        /// <summary>
        /// Test the property 'PomodoroBreakIntervalInMinutes'
        /// </summary>
        [Test]
        public void PomodoroBreakIntervalInMinutesTest()
        {
            // TODO unit test for the property 'PomodoroBreakIntervalInMinutes'
        }
        /// <summary>
        /// Test the property 'PomodoroBreakProjectId'
        /// </summary>
        [Test]
        public void PomodoroBreakProjectIdTest()
        {
            // TODO unit test for the property 'PomodoroBreakProjectId'
        }
        /// <summary>
        /// Test the property 'PomodoroBreakStartSoundEnabled'
        /// </summary>
        [Test]
        public void PomodoroBreakStartSoundEnabledTest()
        {
            // TODO unit test for the property 'PomodoroBreakStartSoundEnabled'
        }
        /// <summary>
        /// Test the property 'PomodoroBreakTagId'
        /// </summary>
        [Test]
        public void PomodoroBreakTagIdTest()
        {
            // TODO unit test for the property 'PomodoroBreakTagId'
        }
        /// <summary>
        /// Test the property 'PomodoroCountdownTimer'
        /// </summary>
        [Test]
        public void PomodoroCountdownTimerTest()
        {
            // TODO unit test for the property 'PomodoroCountdownTimer'
        }
        /// <summary>
        /// Test the property 'PomodoroEnabled'
        /// </summary>
        [Test]
        public void PomodoroEnabledTest()
        {
            // TODO unit test for the property 'PomodoroEnabled'
        }
        /// <summary>
        /// Test the property 'PomodoroFocusIntervalInMinutes'
        /// </summary>
        [Test]
        public void PomodoroFocusIntervalInMinutesTest()
        {
            // TODO unit test for the property 'PomodoroFocusIntervalInMinutes'
        }
        /// <summary>
        /// Test the property 'PomodoroFocusSound'
        /// </summary>
        [Test]
        public void PomodoroFocusSoundTest()
        {
            // TODO unit test for the property 'PomodoroFocusSound'
        }
        /// <summary>
        /// Test the property 'PomodoroGlobalSoundEnabled'
        /// </summary>
        [Test]
        public void PomodoroGlobalSoundEnabledTest()
        {
            // TODO unit test for the property 'PomodoroGlobalSoundEnabled'
        }
        /// <summary>
        /// Test the property 'PomodoroIntervalEndSound'
        /// </summary>
        [Test]
        public void PomodoroIntervalEndSoundTest()
        {
            // TODO unit test for the property 'PomodoroIntervalEndSound'
        }
        /// <summary>
        /// Test the property 'PomodoroIntervalEndVolume'
        /// </summary>
        [Test]
        public void PomodoroIntervalEndVolumeTest()
        {
            // TODO unit test for the property 'PomodoroIntervalEndVolume'
        }
        /// <summary>
        /// Test the property 'PomodoroLongerBreakDurationInMinutes'
        /// </summary>
        [Test]
        public void PomodoroLongerBreakDurationInMinutesTest()
        {
            // TODO unit test for the property 'PomodoroLongerBreakDurationInMinutes'
        }
        /// <summary>
        /// Test the property 'PomodoroPreventScreenLock'
        /// </summary>
        [Test]
        public void PomodoroPreventScreenLockTest()
        {
            // TODO unit test for the property 'PomodoroPreventScreenLock'
        }
        /// <summary>
        /// Test the property 'PomodoroRoundsBeforeLongerBreak'
        /// </summary>
        [Test]
        public void PomodoroRoundsBeforeLongerBreakTest()
        {
            // TODO unit test for the property 'PomodoroRoundsBeforeLongerBreak'
        }
        /// <summary>
        /// Test the property 'PomodoroSessionStartSoundEnabled'
        /// </summary>
        [Test]
        public void PomodoroSessionStartSoundEnabledTest()
        {
            // TODO unit test for the property 'PomodoroSessionStartSoundEnabled'
        }
        /// <summary>
        /// Test the property 'PomodoroShowNotifications'
        /// </summary>
        [Test]
        public void PomodoroShowNotificationsTest()
        {
            // TODO unit test for the property 'PomodoroShowNotifications'
        }
        /// <summary>
        /// Test the property 'PomodoroStopTimerAtIntervalEnd'
        /// </summary>
        [Test]
        public void PomodoroStopTimerAtIntervalEndTest()
        {
            // TODO unit test for the property 'PomodoroStopTimerAtIntervalEnd'
        }
        /// <summary>
        /// Test the property 'PomodoroTrackBreaksAsTimeEntries'
        /// </summary>
        [Test]
        public void PomodoroTrackBreaksAsTimeEntriesTest()
        {
            // TODO unit test for the property 'PomodoroTrackBreaksAsTimeEntries'
        }
        /// <summary>
        /// Test the property 'ProjectDashboardActivityMode'
        /// </summary>
        [Test]
        public void ProjectDashboardActivityModeTest()
        {
            // TODO unit test for the property 'ProjectDashboardActivityMode'
        }
        /// <summary>
        /// Test the property 'ProjectShortcutEnabled'
        /// </summary>
        [Test]
        public void ProjectShortcutEnabledTest()
        {
            // TODO unit test for the property 'ProjectShortcutEnabled'
        }
        /// <summary>
        /// Test the property 'RecordTimeline'
        /// </summary>
        [Test]
        public void RecordTimelineTest()
        {
            // TODO unit test for the property 'RecordTimeline'
        }
        /// <summary>
        /// Test the property 'RememberLastProject'
        /// </summary>
        [Test]
        public void RememberLastProjectTest()
        {
            // TODO unit test for the property 'RememberLastProject'
        }
        /// <summary>
        /// Test the property 'ReminderDays'
        /// </summary>
        [Test]
        public void ReminderDaysTest()
        {
            // TODO unit test for the property 'ReminderDays'
        }
        /// <summary>
        /// Test the property 'ReminderEnabled'
        /// </summary>
        [Test]
        public void ReminderEnabledTest()
        {
            // TODO unit test for the property 'ReminderEnabled'
        }
        /// <summary>
        /// Test the property 'ReminderIntervalInMinutes'
        /// </summary>
        [Test]
        public void ReminderIntervalInMinutesTest()
        {
            // TODO unit test for the property 'ReminderIntervalInMinutes'
        }
        /// <summary>
        /// Test the property 'ReminderPeriod'
        /// </summary>
        [Test]
        public void ReminderPeriodTest()
        {
            // TODO unit test for the property 'ReminderPeriod'
        }
        /// <summary>
        /// Test the property 'ReminderSnoozingInMinutes'
        /// </summary>
        [Test]
        public void ReminderSnoozingInMinutesTest()
        {
            // TODO unit test for the property 'ReminderSnoozingInMinutes'
        }
        /// <summary>
        /// Test the property 'ReportRounding'
        /// </summary>
        [Test]
        public void ReportRoundingTest()
        {
            // TODO unit test for the property 'ReportRounding'
        }
        /// <summary>
        /// Test the property 'ReportRoundingDirection'
        /// </summary>
        [Test]
        public void ReportRoundingDirectionTest()
        {
            // TODO unit test for the property 'ReportRoundingDirection'
        }
        /// <summary>
        /// Test the property 'ReportRoundingStepInMinutes'
        /// </summary>
        [Test]
        public void ReportRoundingStepInMinutesTest()
        {
            // TODO unit test for the property 'ReportRoundingStepInMinutes'
        }
        /// <summary>
        /// Test the property 'ReportsHideWeekends'
        /// </summary>
        [Test]
        public void ReportsHideWeekendsTest()
        {
            // TODO unit test for the property 'ReportsHideWeekends'
        }
        /// <summary>
        /// Test the property 'RunningEntryWarning'
        /// </summary>
        [Test]
        public void RunningEntryWarningTest()
        {
            // TODO unit test for the property 'RunningEntryWarning'
        }
        /// <summary>
        /// Test the property 'RunningTimerNotificationEnabled'
        /// </summary>
        [Test]
        public void RunningTimerNotificationEnabledTest()
        {
            // TODO unit test for the property 'RunningTimerNotificationEnabled'
        }
        /// <summary>
        /// Test the property 'SeenFollowModal'
        /// </summary>
        [Test]
        public void SeenFollowModalTest()
        {
            // TODO unit test for the property 'SeenFollowModal'
        }
        /// <summary>
        /// Test the property 'SeenFooterPopup'
        /// </summary>
        [Test]
        public void SeenFooterPopupTest()
        {
            // TODO unit test for the property 'SeenFooterPopup'
        }
        /// <summary>
        /// Test the property 'SeenProjectDashboardOverlay'
        /// </summary>
        [Test]
        public void SeenProjectDashboardOverlayTest()
        {
            // TODO unit test for the property 'SeenProjectDashboardOverlay'
        }
        /// <summary>
        /// Test the property 'SeenTogglButtonModal'
        /// </summary>
        [Test]
        public void SeenTogglButtonModalTest()
        {
            // TODO unit test for the property 'SeenTogglButtonModal'
        }
        /// <summary>
        /// Test the property 'SendProductEmails'
        /// </summary>
        [Test]
        public void SendProductEmailsTest()
        {
            // TODO unit test for the property 'SendProductEmails'
        }
        /// <summary>
        /// Test the property 'SendTimerNotifications'
        /// </summary>
        [Test]
        public void SendTimerNotificationsTest()
        {
            // TODO unit test for the property 'SendTimerNotifications'
        }
        /// <summary>
        /// Test the property 'SendWeeklyReport'
        /// </summary>
        [Test]
        public void SendWeeklyReportTest()
        {
            // TODO unit test for the property 'SendWeeklyReport'
        }
        /// <summary>
        /// Test the property 'ShowTimeInTitle'
        /// </summary>
        [Test]
        public void ShowTimeInTitleTest()
        {
            // TODO unit test for the property 'ShowTimeInTitle'
        }
        /// <summary>
        /// Test the property 'ShowAllEntries'
        /// </summary>
        [Test]
        public void ShowAllEntriesTest()
        {
            // TODO unit test for the property 'ShowAllEntries'
        }
        /// <summary>
        /// Test the property 'ShowChangelog'
        /// </summary>
        [Test]
        public void ShowChangelogTest()
        {
            // TODO unit test for the property 'ShowChangelog'
        }
        /// <summary>
        /// Test the property 'ShowDescriptionInMenuBar'
        /// </summary>
        [Test]
        public void ShowDescriptionInMenuBarTest()
        {
            // TODO unit test for the property 'ShowDescriptionInMenuBar'
        }
        /// <summary>
        /// Test the property 'ShowDockIcon'
        /// </summary>
        [Test]
        public void ShowDockIconTest()
        {
            // TODO unit test for the property 'ShowDockIcon'
        }
        /// <summary>
        /// Test the property 'ShowEventsInCalendar'
        /// </summary>
        [Test]
        public void ShowEventsInCalendarTest()
        {
            // TODO unit test for the property 'ShowEventsInCalendar'
        }
        /// <summary>
        /// Test the property 'ShowProjectInMenuBar'
        /// </summary>
        [Test]
        public void ShowProjectInMenuBarTest()
        {
            // TODO unit test for the property 'ShowProjectInMenuBar'
        }
        /// <summary>
        /// Test the property 'ShowQrScanner'
        /// </summary>
        [Test]
        public void ShowQrScannerTest()
        {
            // TODO unit test for the property 'ShowQrScanner'
        }
        /// <summary>
        /// Test the property 'ShowSecondsInMenuBar'
        /// </summary>
        [Test]
        public void ShowSecondsInMenuBarTest()
        {
            // TODO unit test for the property 'ShowSecondsInMenuBar'
        }
        /// <summary>
        /// Test the property 'ShowTimelineInDayView'
        /// </summary>
        [Test]
        public void ShowTimelineInDayViewTest()
        {
            // TODO unit test for the property 'ShowTimelineInDayView'
        }
        /// <summary>
        /// Test the property 'ShowTimerInMenuBar'
        /// </summary>
        [Test]
        public void ShowTimerInMenuBarTest()
        {
            // TODO unit test for the property 'ShowTimerInMenuBar'
        }
        /// <summary>
        /// Test the property 'ShowTodayTotalInMenuBar'
        /// </summary>
        [Test]
        public void ShowTodayTotalInMenuBarTest()
        {
            // TODO unit test for the property 'ShowTodayTotalInMenuBar'
        }
        /// <summary>
        /// Test the property 'ShowTotalBillableHours'
        /// </summary>
        [Test]
        public void ShowTotalBillableHoursTest()
        {
            // TODO unit test for the property 'ShowTotalBillableHours'
        }
        /// <summary>
        /// Test the property 'ShowWeekendOnTimerPage'
        /// </summary>
        [Test]
        public void ShowWeekendOnTimerPageTest()
        {
            // TODO unit test for the property 'ShowWeekendOnTimerPage'
        }
        /// <summary>
        /// Test the property 'ShowWorkoutsInCalendar'
        /// </summary>
        [Test]
        public void ShowWorkoutsInCalendarTest()
        {
            // TODO unit test for the property 'ShowWorkoutsInCalendar'
        }
        /// <summary>
        /// Test the property 'SleepBehaviour'
        /// </summary>
        [Test]
        public void SleepBehaviourTest()
        {
            // TODO unit test for the property 'SleepBehaviour'
        }
        /// <summary>
        /// Test the property 'SmartAlertsOption'
        /// </summary>
        [Test]
        public void SmartAlertsOptionTest()
        {
            // TODO unit test for the property 'SmartAlertsOption'
        }
        /// <summary>
        /// Test the property 'SnowballReportRounding'
        /// </summary>
        [Test]
        public void SnowballReportRoundingTest()
        {
            // TODO unit test for the property 'SnowballReportRounding'
        }
        /// <summary>
        /// Test the property 'StackTimesOnManualModeAfter'
        /// </summary>
        [Test]
        public void StackTimesOnManualModeAfterTest()
        {
            // TODO unit test for the property 'StackTimesOnManualModeAfter'
        }
        /// <summary>
        /// Test the property 'StartAutomatically'
        /// </summary>
        [Test]
        public void StartAutomaticallyTest()
        {
            // TODO unit test for the property 'StartAutomatically'
        }
        /// <summary>
        /// Test the property 'StartShortcutMode'
        /// </summary>
        [Test]
        public void StartShortcutModeTest()
        {
            // TODO unit test for the property 'StartShortcutMode'
        }
        /// <summary>
        /// Test the property 'StopAtSpecificTime'
        /// </summary>
        [Test]
        public void StopAtSpecificTimeTest()
        {
            // TODO unit test for the property 'StopAtSpecificTime'
        }
        /// <summary>
        /// Test the property 'StopAutomatically'
        /// </summary>
        [Test]
        public void StopAutomaticallyTest()
        {
            // TODO unit test for the property 'StopAutomatically'
        }
        /// <summary>
        /// Test the property 'StopEntryOnShutdown'
        /// </summary>
        [Test]
        public void StopEntryOnShutdownTest()
        {
            // TODO unit test for the property 'StopEntryOnShutdown'
        }
        /// <summary>
        /// Test the property 'StopSpecifiedTime'
        /// </summary>
        [Test]
        public void StopSpecifiedTimeTest()
        {
            // TODO unit test for the property 'StopSpecifiedTime'
        }
        /// <summary>
        /// Test the property 'StoppedTimerNotificationEnabled'
        /// </summary>
        [Test]
        public void StoppedTimerNotificationEnabledTest()
        {
            // TODO unit test for the property 'StoppedTimerNotificationEnabled'
        }
        /// <summary>
        /// Test the property 'SuggestionsEnabled'
        /// </summary>
        [Test]
        public void SuggestionsEnabledTest()
        {
            // TODO unit test for the property 'SuggestionsEnabled'
        }
        /// <summary>
        /// Test the property 'SummaryReportAmounts'
        /// </summary>
        [Test]
        public void SummaryReportAmountsTest()
        {
            // TODO unit test for the property 'SummaryReportAmounts'
        }
        /// <summary>
        /// Test the property 'SummaryReportDistinctRates'
        /// </summary>
        [Test]
        public void SummaryReportDistinctRatesTest()
        {
            // TODO unit test for the property 'SummaryReportDistinctRates'
        }
        /// <summary>
        /// Test the property 'SummaryReportGrouping'
        /// </summary>
        [Test]
        public void SummaryReportGroupingTest()
        {
            // TODO unit test for the property 'SummaryReportGrouping'
        }
        /// <summary>
        /// Test the property 'SummaryReportSortAsc'
        /// </summary>
        [Test]
        public void SummaryReportSortAscTest()
        {
            // TODO unit test for the property 'SummaryReportSortAsc'
        }
        /// <summary>
        /// Test the property 'SummaryReportSortField'
        /// </summary>
        [Test]
        public void SummaryReportSortFieldTest()
        {
            // TODO unit test for the property 'SummaryReportSortField'
        }
        /// <summary>
        /// Test the property 'SummaryReportSubGrouping'
        /// </summary>
        [Test]
        public void SummaryReportSubGroupingTest()
        {
            // TODO unit test for the property 'SummaryReportSubGrouping'
        }
        /// <summary>
        /// Test the property 'SummaryTotalMode'
        /// </summary>
        [Test]
        public void SummaryTotalModeTest()
        {
            // TODO unit test for the property 'SummaryTotalMode'
        }
        /// <summary>
        /// Test the property 'TagsShortcutEnabled'
        /// </summary>
        [Test]
        public void TagsShortcutEnabledTest()
        {
            // TODO unit test for the property 'TagsShortcutEnabled'
        }
        /// <summary>
        /// Test the property 'Theme'
        /// </summary>
        [Test]
        public void ThemeTest()
        {
            // TODO unit test for the property 'Theme'
        }
        /// <summary>
        /// Test the property 'TimeEntryDisplayMode'
        /// </summary>
        [Test]
        public void TimeEntryDisplayModeTest()
        {
            // TODO unit test for the property 'TimeEntryDisplayMode'
        }
        /// <summary>
        /// Test the property 'TimeEntryGhostSuggestionsEnabled'
        /// </summary>
        [Test]
        public void TimeEntryGhostSuggestionsEnabledTest()
        {
            // TODO unit test for the property 'TimeEntryGhostSuggestionsEnabled'
        }
        /// <summary>
        /// Test the property 'TimeEntryInvitationsNotificationEnabled'
        /// </summary>
        [Test]
        public void TimeEntryInvitationsNotificationEnabledTest()
        {
            // TODO unit test for the property 'TimeEntryInvitationsNotificationEnabled'
        }
        /// <summary>
        /// Test the property 'TimeEntryStartStopInputMode'
        /// </summary>
        [Test]
        public void TimeEntryStartStopInputModeTest()
        {
            // TODO unit test for the property 'TimeEntryStartStopInputMode'
        }
        /// <summary>
        /// Test the property 'TimeofdayFormat'
        /// </summary>
        [Test]
        public void TimeofdayFormatTest()
        {
            // TODO unit test for the property 'TimeofdayFormat'
        }
        /// <summary>
        /// Test the property 'TimerView'
        /// </summary>
        [Test]
        public void TimerViewTest()
        {
            // TODO unit test for the property 'TimerView'
        }
        /// <summary>
        /// Test the property 'TimerViewMobile'
        /// </summary>
        [Test]
        public void TimerViewMobileTest()
        {
            // TODO unit test for the property 'TimerViewMobile'
        }
        /// <summary>
        /// Test the property 'ToSAcceptNeeded'
        /// </summary>
        [Test]
        public void ToSAcceptNeededTest()
        {
            // TODO unit test for the property 'ToSAcceptNeeded'
        }
        /// <summary>
        /// Test the property 'UseMiniTimer'
        /// </summary>
        [Test]
        public void UseMiniTimerTest()
        {
            // TODO unit test for the property 'UseMiniTimer'
        }
        /// <summary>
        /// Test the property 'VisibleFooter'
        /// </summary>
        [Test]
        public void VisibleFooterTest()
        {
            // TODO unit test for the property 'VisibleFooter'
        }
        /// <summary>
        /// Test the property 'WebTimeEntryStarted'
        /// </summary>
        [Test]
        public void WebTimeEntryStartedTest()
        {
            // TODO unit test for the property 'WebTimeEntryStarted'
        }
        /// <summary>
        /// Test the property 'WebTimeEntryStopped'
        /// </summary>
        [Test]
        public void WebTimeEntryStoppedTest()
        {
            // TODO unit test for the property 'WebTimeEntryStopped'
        }
        /// <summary>
        /// Test the property 'WeeklyReportGrouping'
        /// </summary>
        [Test]
        public void WeeklyReportGroupingTest()
        {
            // TODO unit test for the property 'WeeklyReportGrouping'
        }
        /// <summary>
        /// Test the property 'WeeklyReportValueToShow'
        /// </summary>
        [Test]
        public void WeeklyReportValueToShowTest()
        {
            // TODO unit test for the property 'WeeklyReportValueToShow'
        }
        /// <summary>
        /// Test the property 'WindowsAutoTrackingRules'
        /// </summary>
        [Test]
        public void WindowsAutoTrackingRulesTest()
        {
            // TODO unit test for the property 'WindowsAutoTrackingRules'
        }
        /// <summary>
        /// Test the property 'WindowsShowHideTogglKeyboardShortcut'
        /// </summary>
        [Test]
        public void WindowsShowHideTogglKeyboardShortcutTest()
        {
            // TODO unit test for the property 'WindowsShowHideTogglKeyboardShortcut'
        }
        /// <summary>
        /// Test the property 'WindowsStopContinueKeyboardShortcut'
        /// </summary>
        [Test]
        public void WindowsStopContinueKeyboardShortcutTest()
        {
            // TODO unit test for the property 'WindowsStopContinueKeyboardShortcut'
        }
        /// <summary>
        /// Test the property 'WindowsStopStartKeyboardShortcut'
        /// </summary>
        [Test]
        public void WindowsStopStartKeyboardShortcutTest()
        {
            // TODO unit test for the property 'WindowsStopStartKeyboardShortcut'
        }
        /// <summary>
        /// Test the property 'WindowsTheme'
        /// </summary>
        [Test]
        public void WindowsThemeTest()
        {
            // TODO unit test for the property 'WindowsTheme'
        }
        /// <summary>
        /// Test the property 'WorkoutDefaultProjectId'
        /// </summary>
        [Test]
        public void WorkoutDefaultProjectIdTest()
        {
            // TODO unit test for the property 'WorkoutDefaultProjectId'
        }
        /// <summary>
        /// Test the property 'WorkoutDefaultTagId'
        /// </summary>
        [Test]
        public void WorkoutDefaultTagIdTest()
        {
            // TODO unit test for the property 'WorkoutDefaultTagId'
        }

    }

}
