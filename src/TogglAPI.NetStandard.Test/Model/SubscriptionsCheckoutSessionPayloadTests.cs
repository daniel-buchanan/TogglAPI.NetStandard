/* 
 * Toggl API
 *
 * Public Toggl API. Note: We use BasicAuth in a specific way. By the standard you provide `Authentication` header with `base64(user_name:password)` as a `credential`. In our case it will be `base64(user_name:api_token)`.
 *
 * OpenAPI spec version: 9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TogglAPI.NetStandard.Api;
using TogglAPI.NetStandard.Model;
using TogglAPI.NetStandard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TogglAPI.NetStandard.Test
{
    /// <summary>
    ///  Class for testing SubscriptionsCheckoutSessionPayload
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SubscriptionsCheckoutSessionPayloadTests
    {
        // TODO uncomment below to declare an instance variable for SubscriptionsCheckoutSessionPayload
        //private SubscriptionsCheckoutSessionPayload instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SubscriptionsCheckoutSessionPayload
            //instance = new SubscriptionsCheckoutSessionPayload();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SubscriptionsCheckoutSessionPayload
        /// </summary>
        [Test]
        public void SubscriptionsCheckoutSessionPayloadInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SubscriptionsCheckoutSessionPayload
            //Assert.IsInstanceOfType<SubscriptionsCheckoutSessionPayload> (instance, "variable 'instance' is a SubscriptionsCheckoutSessionPayload");
        }


        /// <summary>
        /// Test the property 'CancelUrl'
        /// </summary>
        [Test]
        public void CancelUrlTest()
        {
            // TODO unit test for the property 'CancelUrl'
        }
        /// <summary>
        /// Test the property 'CountryCode'
        /// </summary>
        [Test]
        public void CountryCodeTest()
        {
            // TODO unit test for the property 'CountryCode'
        }
        /// <summary>
        /// Test the property 'CountryId'
        /// </summary>
        [Test]
        public void CountryIdTest()
        {
            // TODO unit test for the property 'CountryId'
        }
        /// <summary>
        /// Test the property 'PriceTag'
        /// </summary>
        [Test]
        public void PriceTagTest()
        {
            // TODO unit test for the property 'PriceTag'
        }
        /// <summary>
        /// Test the property 'Referral'
        /// </summary>
        [Test]
        public void ReferralTest()
        {
            // TODO unit test for the property 'Referral'
        }
        /// <summary>
        /// Test the property 'SubdivisionId'
        /// </summary>
        [Test]
        public void SubdivisionIdTest()
        {
            // TODO unit test for the property 'SubdivisionId'
        }
        /// <summary>
        /// Test the property 'SuccessUrl'
        /// </summary>
        [Test]
        public void SuccessUrlTest()
        {
            // TODO unit test for the property 'SuccessUrl'
        }
        /// <summary>
        /// Test the property 'Tax'
        /// </summary>
        [Test]
        public void TaxTest()
        {
            // TODO unit test for the property 'Tax'
        }
        /// <summary>
        /// Test the property 'Zip'
        /// </summary>
        [Test]
        public void ZipTest()
        {
            // TODO unit test for the property 'Zip'
        }

    }

}
