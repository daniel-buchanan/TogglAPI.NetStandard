/* 
 * Toggl API
 *
 * Public Toggl API. Note: We use BasicAuth in a specific way. By the standard you provide `Authentication` header with `base64(user_name:password)` as a `credential`. In our case it will be `base64(user_name:api_token)`.
 *
 * OpenAPI spec version: 9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TogglAPI.NetStandard.Client;
using TogglAPI.NetStandard.Api;
using TogglAPI.NetStandard.Model;

namespace TogglAPI.NetStandard.Test
{
    /// <summary>
    ///  Class for testing UtilsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UtilsApiTests
    {
        private UtilsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UtilsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UtilsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UtilsApi
            //Assert.IsInstanceOfType(typeof(UtilsApi), instance, "instance is a UtilsApi");
        }

        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdActionTasksPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdActionTasksPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //string action = null;
            //TasksTasksPost tasksPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdActionTasksPost(workspaceId, action, tasksPost);
            //Assert.IsInstanceOf<List<ModelsTask>> (response, "response is List<ModelsTask>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdFiltersClientsPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdFiltersClientsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DtoClientFilterParamsRequest clientsPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdFiltersClientsPost(workspaceId, clientsPost);
            //Assert.IsInstanceOf<List<DtoClientFilterResponse>> (response, "response is List<DtoClientFilterResponse>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdFiltersProjectGroupsPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdFiltersProjectGroupsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DtoProjectGroupParamsRequest projectGroupsParams = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdFiltersProjectGroupsPost(workspaceId, projectGroupsParams);
            //Assert.IsInstanceOf<List<DtoProjectGroupResponse>> (response, "response is List<DtoProjectGroupResponse>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdFiltersProjectUsersPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdFiltersProjectUsersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DtoProjectUserParamsRequest statusPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdFiltersProjectUsersPost(workspaceId, statusPost);
            //Assert.IsInstanceOf<List<DtoProjectUserResponse>> (response, "response is List<DtoProjectUserResponse>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdFiltersProjectsPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdFiltersProjectsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DtoProjectFilterParamRequest projectsPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdFiltersProjectsPost(workspaceId, projectsPost);
            //Assert.IsInstanceOf<List<DtoProjectFilterResponse>> (response, "response is List<DtoProjectFilterResponse>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdFiltersProjectsStatusPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdFiltersProjectsStatusPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //StatusStatusPost statusPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdFiltersProjectsStatusPost(workspaceId, statusPost);
            //Assert.IsInstanceOf<List<StatusProjectStatus>> (response, "response is List<StatusProjectStatus>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdFiltersTasksStatusPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdFiltersTasksStatusPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //TasksTasksStatusPost tasksStatusPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdFiltersTasksStatusPost(workspaceId, tasksStatusPost);
            //Assert.IsInstanceOf<List<TasksTaskStatus>> (response, "response is List<TasksTaskStatus>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdFiltersUsersPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdFiltersUsersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DtoUserFilterParamsRequest usersFilter = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdFiltersUsersPost(workspaceId, usersFilter);
            //Assert.IsInstanceOf<List<DtoUserFilterResponse>> (response, "response is List<DtoUserFilterResponse>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSearchClientsPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSearchClientsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DtoClientFilterParamsRequest clientsPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSearchClientsPost(workspaceId, clientsPost);
            //Assert.IsInstanceOf<List<DtoClientFilterResponse>> (response, "response is List<DtoClientFilterResponse>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSearchProjectsPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSearchProjectsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //ProjectsProjectsPost projectsPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSearchProjectsPost(workspaceId, projectsPost);
            //Assert.IsInstanceOf<List<Object>> (response, "response is List<Object>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSearchUsersPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSearchUsersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DtoUserFilterParamsRequest usersFilter = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSearchUsersPost(workspaceId, usersFilter);
            //Assert.IsInstanceOf<List<DtoUserFilterResponse>> (response, "response is List<DtoUserFilterResponse>");
        }
        
    }

}
