/* 
 * Toggl API
 *
 * Public Toggl API. Note: We use BasicAuth in a specific way. By the standard you provide `Authentication` header with `base64(user_name:password)` as a `credential`. In our case it will be `base64(user_name:api_token)`.
 *
 * OpenAPI spec version: 9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TogglAPI.NetStandard.Client;
using TogglAPI.NetStandard.Api;
using TogglAPI.NetStandard.Model;

namespace TogglAPI.NetStandard.Test
{
    /// <summary>
    ///  Class for testing SummaryReportsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SummaryReportsApiTests
    {
        private SummaryReportsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SummaryReportsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SummaryReportsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SummaryReportsApi
            //Assert.IsInstanceOfType(typeof(SummaryReportsApi), instance, "instance is a SummaryReportsApi");
        }

        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdProjectsProjectIdSummaryPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdProjectsProjectIdSummaryPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //int? projectId = null;
            //BaseRangePost rangePost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdProjectsProjectIdSummaryPost(workspaceId, projectId, rangePost);
            //Assert.IsInstanceOf<TotalsReportData> (response, "response is TotalsReportData");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdProjectsSummaryPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdProjectsSummaryPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DtoProjectUsersRequest projectUsersInput = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdProjectsSummaryPost(workspaceId, projectUsersInput);
            //Assert.IsInstanceOf<List<UsersProjectUsersSummaryRow>> (response, "response is List<UsersProjectUsersSummaryRow>");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSummaryTimeEntriesExtensionPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSummaryTimeEntriesExtensionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //string extension = null;
            //SummaryExportPost summaryExportPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSummaryTimeEntriesExtensionPost(workspaceId, extension, summaryExportPost);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSummaryTimeEntriesPdfPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSummaryTimeEntriesPdfPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //SummaryExportPDFPost summaryExportPdfPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSummaryTimeEntriesPdfPost(workspaceId, summaryExportPdfPost);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSummaryTimeEntriesPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSummaryTimeEntriesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //SummaryReportPost summaryPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSummaryTimeEntriesPost(workspaceId, summaryPost);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
