/* 
 * Toggl API
 *
 * Public Toggl API. Note: We use BasicAuth in a specific way. By the standard you provide `Authentication` header with `base64(user_name:password)` as a `credential`. In our case it will be `base64(user_name:api_token)`.
 *
 * OpenAPI spec version: 9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TogglAPI.NetStandard.Client;
using TogglAPI.NetStandard.Api;
using TogglAPI.NetStandard.Model;

namespace TogglAPI.NetStandard.Test
{
    /// <summary>
    ///  Class for testing SavedReportsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SavedReportsApiTests
    {
        private SavedReportsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SavedReportsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SavedReportsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SavedReportsApi
            //Assert.IsInstanceOfType(typeof(SavedReportsApi), instance, "instance is a SavedReportsApi");
        }

        
        /// <summary>
        /// Test ReportsApiV3SharedReportTokenCsvPost
        /// </summary>
        [Test]
        public void ReportsApiV3SharedReportTokenCsvPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportToken = null;
            //string startDate = null;
            //string endDate = null;
            //var response = instance.ReportsApiV3SharedReportTokenCsvPost(reportToken, startDate, endDate);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ReportsApiV3SharedReportTokenPdfPost
        /// </summary>
        [Test]
        public void ReportsApiV3SharedReportTokenPdfPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportToken = null;
            //string startDate = null;
            //string endDate = null;
            //string displayMode = null;
            //var response = instance.ReportsApiV3SharedReportTokenPdfPost(reportToken, startDate, endDate, displayMode);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ReportsApiV3SharedReportTokenPost
        /// </summary>
        [Test]
        public void ReportsApiV3SharedReportTokenPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportToken = null;
            //string startDate = null;
            //int? firstTimestamp = null;
            //string endDate = null;
            //List<int?> groupIds = null;
            //List<int?> userIds = null;
            //List<int?> clientIds = null;
            //List<int?> projectIds = null;
            //List<int?> taskIds = null;
            //List<int?> tagIds = null;
            //string description = null;
            //bool? billable = null;
            //int? rounding = null;
            //int? roundingMinutes = null;
            //bool? grouped = null;
            //string grouping = null;
            //string subGrouping = null;
            //var response = instance.ReportsApiV3SharedReportTokenPost(reportToken, startDate, firstTimestamp, endDate, groupIds, userIds, clientIds, projectIds, taskIds, tagIds, description, billable, rounding, roundingMinutes, grouped, grouping, subGrouping);
            //Assert.IsInstanceOf<SavedReportOutput> (response, "response is SavedReportOutput");
        }
        
        /// <summary>
        /// Test ReportsApiV3SharedReportTokenXlsxPost
        /// </summary>
        [Test]
        public void ReportsApiV3SharedReportTokenXlsxPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportToken = null;
            //string startDate = null;
            //string endDate = null;
            //var response = instance.ReportsApiV3SharedReportTokenXlsxPost(reportToken, startDate, endDate);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
