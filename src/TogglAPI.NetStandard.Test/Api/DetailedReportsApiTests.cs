/* 
 * Toggl API
 *
 * Public Toggl API. Note: We use BasicAuth in a specific way. By the standard you provide `Authentication` header with `base64(user_name:password)` as a `credential`. In our case it will be `base64(user_name:api_token)`.
 *
 * OpenAPI spec version: 9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TogglAPI.NetStandard.Client;
using TogglAPI.NetStandard.Api;

namespace TogglAPI.NetStandard.Test
{
    /// <summary>
    ///  Class for testing DetailedReportsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DetailedReportsApiTests
    {
        private DetailedReportsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DetailedReportsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DetailedReportsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DetailedReportsApi
            //Assert.IsInstanceOfType(typeof(DetailedReportsApi), instance, "instance is a DetailedReportsApi");
        }

        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesExtensionPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesExtensionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //string extension = null;
            //DetailedSearchExportPost detailedExportPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesExtensionPost(workspaceId, extension, detailedExportPost);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesPdfPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesPdfPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DetailedExportPDFPost detailedExportPdfPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesPdfPost(workspaceId, detailedExportPdfPost);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //DetailedPost searchPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesPost(workspaceId, searchPost);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesTotalsPost
        /// </summary>
        [Test]
        public void ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesTotalsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //TotalsReportPost totalsPost = null;
            //var response = instance.ReportsApiV3WorkspaceWorkspaceIdSearchTimeEntriesTotalsPost(workspaceId, totalsPost);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
